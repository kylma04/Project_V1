<%= form_with model: @participant, url: sign_up_path do |form| %>
    <div class="form-box signup">
      <div class="form-details">
        <h2>Create Account</h2>
        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Alias repellendus aliquid ratione commodi? Quaerat corrupti, vel assumenda provident nihil tempora recusandae earum omnis, eum doloremque dolorum expedita cupiditate voluptates consequatur.</p>
      </div>
      <div class="form-content">
        <h2>SIGNUP</h2>
        <div class="input-field">
          <%=form.text_field :firstname, required:true %>
          <%=form.label :firstname, "Enter your firstname"%>
        </div>
        <div class="input-field">
          <%=form.text_field :lastname, required:true %>
          <%=form.label :lastname, "Enter your last name"%>
        </div>
        <div class="input-field">
          <%=form.number_field :age, required:true %>
          <%=form.label :age, "Enter your age"%>
        </div>
        <div class="input-field">
          <%=form.email_field :email, required:true %>
          <%=form.label :email, "Enter your email"%>
        </div>
        <div class="input-field">
          <%=form.telephone_field :phone, required:true %>
          <%=form.label :phone, "Enter your phone number"%>
        </div>
        <div class="input-field">
          <%=form.password_field :password, required:true %>
          <%=form.label :password, "Enter a new password"%>
        </div>
        <%= form.submit "Sign Up", class: "thesign"%>
        <div class="bottom-link">
          Already have an account?
          <a href="#" id="login-link">Login</a>
        </div>
      </div>
    </div>
  <% end %>


















  def determine_current_cleaner
    end_of_week = start_date + 6
    participants_eligible = Participant.where(is_current: true, rating: 80..100).order(rating: :desc)
    tasks_needed = participants_eligible.count
    current_date = start_date
    tasks_assigned = 0

    while current_date <= end_of_week && tasks_assigned < tasks_needed
      available_participants = participants_eligible.to_a.rotate(tasks_assigned % participants_eligible.count)
      assigned_participant = available_participants.find do |participant|
        !Task.exists?(participant_id: participant.id, date: current_date - 1)
      end
      if assigned_participant
        Task.create(participant_id: assigned_participant.id, date: current_date)
        tasks_assigned += 1
      end
      current_date += 1 
    end
  end